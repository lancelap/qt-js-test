{"version":3,"sources":["components/YandexMap.js","components/Marker.js","components/MarkerContainer.js","components/Polyline.js","components/MarkerList.js","components/MarkerForm.js","components/Ymap.js","loadScriptMap.js","App.js","index.js"],"names":["YandexMap","react_default","a","createElement","id","this","props","className","style","width","height","Component","Marker","clickHandeler","index","deleteMarker","e","preventDefault","_this$props","text","opacity","isDragging","connectDragSource","connectDropTarget","onClick","cardTarget","hover","monitor","component","dragIndex","getItem","hoverIndex","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveMarker","MarkerContainer","_this","addDragEndListener","_getMapY","getMapY","ymaps","mapY","coordinates","getCenter","placemark","Placemark","balloonContent","draggable","geoObjects","add","events","geometry","getCoordinates","timestamp","remove","components_Marker","flow","DragSource","beginDrag","connect","dragSource","DropTarget","dropTarget","Polyline","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","polyline","markers","setCoordinates","MarkerList","removeDragEndListener","markersArr","map","marker","components_MarkerContainer","key","coords","components_Polyline","MarkerForm","onChangeMarkerTitle","setState","target","value","onSubmit","addMarker","Date","now","state","type","placeholder","onChange","Ymap","toConsumableArray","concat","update","$splice","dragCard","loaded","mapId","url","_this2","Promise","resolve","reject","script","document","body","getElementsByTagName","match","window","initYandexMap","Error","src","onerror","appendChild","then","initMap","catch","error","console","Map","center","zoom","_this$state","components_MarkerForm","components_MarkerList","components_YandexMap","App","components_Ymap","DragDropContext","HTML5Backend","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.dd60d346.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass YandexMap extends Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return (\n      <div \n        id={this.props.id} \n        className='yandex-map'\n        style={{width: '450px', height: '450px'}}>\n      </div>\n    );\n  }\n}\n\nexport default YandexMap;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Marker extends Component {\n  render() {\n    const {\n      text, \n      index, \n      deleteMarker,\n      isDragging,\n      connectDragSource,\n      connectDropTarget \n    } = this.props;\n\n    const opacity = isDragging ? 0 : 1;\n\n    return (\n      connectDragSource(\n        connectDropTarget(\n          <li className='marker' style={{opacity}}>\n            <p className='marker__text'>{text}</p>\n            <button className='marker__button' onClick={this.clickHandeler(index, deleteMarker)}>X</button>\n          </li>\n        ),\n      )\n    );\n  }\n\n  clickHandeler = (index, deleteMarker) => (e) => {\n    e.preventDefault();\n    deleteMarker(index);\n  }\n}\n\nMarker.propTypes = {\n  id: PropTypes.number,\n  deleteMarker: PropTypes.func, \n  addDragEndListener: PropTypes.func, \n  getMapY: PropTypes.func\n};\n\nexport default Marker;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {findDOMNode} from 'react-dom';\nimport {DragSource, DropTarget} from 'react-dnd';\nimport flow from 'lodash/flow';\nimport Marker from './Marker';\n\nconst cardSource = {\n  beginDrag(props) {\n    return {\n      id: props.id,\n      index: props.index,\n    };\n  },\n};\n\nconst cardTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Determine rectangle on screen\n    const hoverBoundingRect = (findDOMNode(\n      component,\n    )).getBoundingClientRect();\n\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n\n    // Get pixels to the top\n    const hoverClientY = (clientOffset).y - hoverBoundingRect.top;\n\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return;\n    }\n\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveMarker(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nclass MarkerContainer extends Component {\n  componentDidMount() {\n    const {addDragEndListener, text, id, getMapY} = this.props;\n    const {ymaps, mapY} = getMapY();\n    const coordinates = mapY.getCenter();\n\n    const placemark = new ymaps.Placemark(coordinates, {\n      balloonContent: this.props.text\n    }, { \n      draggable: true \n    });\n\n    this.placemark = placemark;\n    \n    mapY.geoObjects.add(placemark); \n\n    placemark.events.add('dragend', () => {\n      const coordinates = placemark.geometry.getCoordinates();\n      addDragEndListener(this.props.index, {timestamp: id, text, coordinates});\n    });\n  }\n\n  componentWillUnmount() {\n    this.placemark.events.remove('dragend');\n    this.props.getMapY().mapY.geoObjects.remove(this.placemark);\n  }\n\n  render() {return <Marker {...this.props} />;}\n}\n\nMarkerContainer.propTypes = {\n  id: PropTypes.number,\n  deleteMarker: PropTypes.func, \n  addDragEndListener: PropTypes.func, \n  getMapY: PropTypes.func\n};\n\nexport default flow(\n  DragSource(\n    'marker',\n    cardSource,\n    (connect, monitor) => ({\n      connectDragSource: connect.dragSource(),\n      isDragging: monitor.isDragging(),\n    }),\n  ),\n  DropTarget('marker', cardTarget, (connect) => ({\n    connectDropTarget: connect.dropTarget(),\n  }))\n)(MarkerContainer);","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Polyline extends Component {\n  constructor() {\n    super();\n    this.polyline = null;\n    this.index = null;\n  }\n\n  componentDidMount() {\n    const {markers, getMapY} = this.props;\n    const {ymaps, mapY} = getMapY();\n    this.polyline = new ymaps.Polyline(markers);\n    mapY.geoObjects.add(this.polyline);\n  }\n  \n  componentDidUpdate() {\n    const {markers} = this.props;\n    this.polyline.geometry.setCoordinates(markers);\n  }\n  \n  render() {\n    return null;\n  }\n}\n\nPolyline.propTypes = {\n  markers: PropTypes.array,\n  getMapY: PropTypes.func\n};\n\nexport default Polyline;","import React, {Component} from 'react';\nimport MarkerContainer from './MarkerContainer';\nimport Polyline from './Polyline';\nimport PropTypes from 'prop-types';\n\nclass MarkerList extends Component {\n  render() {  \n    const {deleteMarker, markers, addDragEndListener, removeDragEndListener, moveMarker, getMapY} = this.props;\n    const markersArr = markers.map((marker, index) => {\n      return <MarkerContainer\n        key={marker.timestamp}\n        text={marker.text}\n        id={marker.timestamp}\n        deleteMarker={deleteMarker}\n        index={index}\n        moveMarker={moveMarker}\n        addDragEndListener={addDragEndListener} \n        removeDragEndListener={removeDragEndListener}\n        getMapY={getMapY} />;\n    });\n    const coords = markers.map((marker) => {\n      return marker.coordinates;\n    });\n\n    return (\n      <ul className='marker-list'>\n        {markersArr}\n        <Polyline markers={coords} getMapY={getMapY} />\n      </ul>\n    );\n  }\n}\n\nMarkerList.propTypes = {\n  getMapY: PropTypes.func, \n  deleteMarker: PropTypes.func, \n  markers: PropTypes.array, \n  addDragEndListener: PropTypes.func, \n  removeDragEndListener: PropTypes.func, \n};\n\nexport default MarkerList;\n\n\n  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MarkerForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: ''\n    };\n  }\n\n  render() {\n    return(\n      <form className='marker-form' onSubmit={this.onSubmit}>\n        <input className='marker-form__input'\n          type=\"text\"\n          value={this.state.text}\n          placeholder=\"Новая точка маршрута\" \n          onChange={this.onChangeMarkerTitle} />\n      </form>\n    );\n  }\n\n  onChangeMarkerTitle = (e) => {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const mapY = this.props.getMapY().mapY;\n    this.props.addMarker(Date.now(), this.state.text, mapY.getCenter());\n    this.setState({text: ''});\n  }\n}\n\nMarkerForm.propTypes = {\n  addMarker: PropTypes.func, \n  getMapY: PropTypes.func\n};\n\nexport default MarkerForm;","import React, { Component } from 'react';\nimport loadScriptMap from '../loadScriptMap';\nimport YandexMap from './YandexMap';\nimport MarkerList from './MarkerList';\nimport MarkerForm from './MarkerForm';\nimport update from 'immutability-helper';\n\n\nclass Ymap extends Component {\n  constructor() {\n    super();\n    this.getMapY = null;\n\n    this.state = {\n      loaded: false,\n      mapId: 'YMapsID',\n      markers: [],\n    };\n  }\n\n  componentDidMount() {\n    loadScriptMap('https://api-maps.yandex.ru/2.1/?lang=ru_RU&onload=initYandexMap')\n      .then((ymaps) => {\n        this.initMap(ymaps);\n      })\n      .catch(error => console.error(error));\n  }\n\n  initMap(ymaps) {\n    const mapY = new ymaps.Map(this.state.mapId, {\n      center: [55.87, 37.66],\n      zoom: 10\n    });\n\n    this.getMapY = function() {\n      return {\n        ymaps,\n        mapY\n      };\n    };\n\n    this.setState({\n      loaded: true\n    });\n  }\n\n  render() {\n    const {mapId, loaded, markers} = this.state;\n    return (\n      <div className='map'>\n        {loaded ? (\n          <div>\n            <MarkerForm addMarker={this.addMarker} getMapY={this.getMapY} />\n            <MarkerList \n              getMapY={this.getMapY} \n              deleteMarker={this.deleteMarker} \n              moveMarker={this.moveMarker}\n              addDragEndListener={this.addDragEndListener}\n              removeDragEndListener={this.removeDragEndListener}\n              markers={markers} />\n          </div>\n        ) : (\n          null\n        )}\n        \n        <YandexMap id={mapId} />\n      </div>\n    );\n  }\n\n  addMarker = (id, text, coordinates) => {\n    const marker = {timestamp: id, text, coordinates};\n    this.setState({\n      markers: [...this.state.markers, marker]\n    });\n  }\n\n  deleteMarker = (index) => {\n    this.setState(\n      update(this.state, {\n        markers: {\n          $splice: [[index, 1]]\n        }\n      })\n    );\n  }\n\n  addDragEndListener = (index, placemark) => {\n    this.setState(\n      update(this.state, {\n        markers: {\n          $splice: [[index, 1, placemark]]\n        }\n      })\n    );\n  }\n\n  moveMarker = (dragIndex, hoverIndex) => {\n    const {markers} = this.state;\n    const dragCard = markers[dragIndex];\n\n    this.setState(\n      update(this.state, {\n        markers: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]],\n        },\n      }),\n    );\n  }\n\n}\n\nexport default Ymap;","export default function loadScriptMap(url) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script'); \n    const body = document.getElementsByTagName('body')[0];\n    \n    if(url.match(/onload=initYandexMap/)) {\n      window.initYandexMap = (ymaps) => resolve(ymaps);\n    } else {\n      reject(new Error('require onload func'));\n    }\n\n    script.src = url;\n    script.onerror = reject;\n    body.appendChild(script);\n  });\n}","import React, { Component } from 'react';\nimport Ymap from './components/Ymap';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext } from 'react-dnd';\n\nclass App extends Component {\n  render() {\n    return <Ymap />;\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}